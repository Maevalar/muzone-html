name: "Deploy"
description: 'Deploys the application to the server'
inputs:
  ssh_password:
    description: 'SSH password for the remote server'
    required: true
  php_container:
    description: 'PHP container name'
    required: false
    default: 'muzone_php'
  folder:
    description: 'Folder for deployment'
    required: false
    default: '/root/www/muzone/deployment/'
  project_folder:
    description: 'Folder for deployment'
    required: false
    default: '/root/www/muzone/'
  container_folder:
    description: 'Folder in container'
    required: false
    default: '/srv/src/muzone/current/'
  timestamp:
    description: 'Timestamp for deployment'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Debug information
      run: |
        echo "Environment Variables:"
        env
        echo "---------------------------------------"
        echo "Current Directory:"
        pwd
        echo "---------------------------------------"
        echo "Directory Content:"
        ls -la
        echo "SSH Password: ${{ inputs.ssh_password }}"
      shell: bash

    - name: Deploy to server with rsync
      run: |
        sshpass -p '${{ inputs.ssh_password }}' rsync -avz -e 'ssh -o StrictHostKeyChecking=no' --exclude '.git' --exclude 'var' . root@185.215.180.50:${{ inputs.folder }}${{ inputs.timestamp }}
      shell: bash

    - name: SSH to server and run commands
      run: |
        sshpass -p ${{ inputs.ssh_password }} ssh root@185.215.180.50 <<'ENDSSH'
          sops --decrypt ${{ inputs.folder }}${{ inputs.timestamp }}/.env.local.sops > ${{ inputs.folder }}${{ inputs.timestamp }}/.env.local
          cd ${{ inputs.project_folder }}
          ln -sfn deployment/{{ inputs.timestamp }}/ current
          cd current
          mkdir -p var/cache/ var/log/
          chmod -R 777 var/
          cd ${{ inputs.folder }}
          ls -t | tail -n +6 | xargs -I {} rm -rf {}
          docker exec ${{ inputs.php_container }} ${{ inputs.container_folder }}bin/console doctrine:migrations:migrate --no-interaction
          docker exec ${{ inputs.php_container }} ${{ inputs.container_folder }}bin/console cache:clear --env=prod
          docker exec ${{ inputs.php_container }} ${{ inputs.container_folder }}bin/console cache:warmup --env=prod
          docker exec ${{ inputs.php_container }} supervisorctl restart all
        ENDSSH
      shell: bash
